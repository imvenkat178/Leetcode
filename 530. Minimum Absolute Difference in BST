/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int getMinimumDifference(TreeNode root) {
        int diff[] = new int[1];
        diff[0] = Integer.MAX_VALUE;
        int[] prev = new int[1];
        prev[0] = Integer.MAX_VALUE;
        minDiff(root , diff ,prev);
        return diff[0];
        
    }

    private void minDiff(TreeNode root , int[] diff ,int[] prev)
    {
        if(root == null)
        {
            return;
        }
        minDiff(root.left , diff , prev);
        if(root.left!=null && Math.abs(root.left.val - root.val) < diff[0])
        {
            diff[0] = Math.abs(root.left.val - root.val);
        }
        if(root.right!=null && Math.abs(root.right.val - root.val) < diff[0])
        {
            diff[0] = Math.abs(root.right.val - root.val);
        }
        if(Math.abs(root.val - prev[0]) < diff[0])
        {
            diff[0] = Math.abs(root.val - prev[0]);
        }
        prev[0] = root.val;
        minDiff(root.right , diff , prev);
    }
}
