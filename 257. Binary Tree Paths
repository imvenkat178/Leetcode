/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        String st = "";
        List<String> list = new ArrayList<String>();
        binary (root,list,st);
        return list;
    }

    private void binary(TreeNode root,List<String> list , String st)
    {
        if(root == null)
        {
            return;
        }
        st+=Integer.toString(root.val);
        st+="->";
        if(root.left == null && root.right == null)
        {
            int length = st.length();
            st = st.substring(0,length-2);
            list.add(st);
        }
        binary(root.left,list,st);     
        binary(root.right,list,st);
    }
}
