/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode dummy = new ListNode();
        ListNode l3 = dummy;
        while (l1!=null && l2!=null)
        {
            l3.next = new ListNode((carry+l1.val+l2.val)%10);
            carry = (carry+l1.val+l2.val)/10;
            l3 = l3.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        if(l1 == null)
        {
            while(l2!=null)
            {
                l3.next = new ListNode((carry+l2.val)%10);
                carry = (carry+l2.val)/10;
                l2 = l2.next;
                l3 = l3.next;
            }
        }
        if(l2 == null)
        {
            while(l1!=null)
            {
                l3.next = new ListNode((carry+l1.val)%10);
                carry = (carry+l1.val)/10;
                l1 = l1.next;
                l3 = l3.next;
            }
        }
        if(carry!=0)
        {
            l3.next = new ListNode(carry);
        }
        return dummy.next;
    }
}
