/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        int arr[] = new int[2];
        //TO check whether the original value changed or not cause the 2nd min value may be Integer.MAX_VALUE
        boolean flag[] = new boolean[1];
        flag[0] = false;
        arr[0] = Integer.MAX_VALUE;
        arr[1] = Integer.MAX_VALUE;
        secondMin(root , arr,flag);
        if(!flag[0])
        {
            return -1;
        }else{
            return arr[1];
        }
    }

    private void secondMin(TreeNode root , int[] arr,boolean[] flag)
    {
        if(root == null)
        {
            return;
        }
        if(arr[0]>root.val)
        {
            arr[0] = root.val;
        }
        if(arr[1]>=root.val && root.val!=arr[0])
        {
            flag[0] = true;
            arr[1] = root.val;
        }
        second(root.left,arr,flag);
        second(root.right,arr,flag);
    }
}
