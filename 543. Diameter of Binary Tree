/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        int[] arr = new int[1];
        arr[0] = Integer.MIN_VALUE;
        diameter (root , arr);
        return arr[0];
        
    }

    private int diameter(TreeNode root , int[] arr)
    {
        if(root == null)
        {
            return 0;
        }
        int l = diameter(root.left , arr);
        int r = diameter(root.right , arr);
        if(arr[0]<(l+r))
        {
            arr[0] = l+r;
        }
        return 1 + Math.max(l,r);
    }
}
