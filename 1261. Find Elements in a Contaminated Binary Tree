/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class FindElements {

    Set<Integer> set = new HashSet<Integer>();

    public FindElements(TreeNode root) {
        if(root==null)
        {
            return;
        }
        root.val=0;
        set.add(0);
        construct(root);
    }

    public void construct(TreeNode root)
    {
        if(root == null)
        {
            return;
        }
        if(root.left != null && root.left.val==-1)
        {
            root.left.val = (root.val*2)+1;
            set.add((root.val*2)+1);
        }
        if(root.right != null && root.right.val==-1)
        {
            root.right.val = (root.val*2)+2;
             set.add((root.val*2)+2);
        }
        construct(root.left);
        construct(root.right);   

    }
    
    public boolean find(int target) {
        return set.contains(target)?true:false;
    }
}

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements obj = new FindElements(root);
 * boolean param_1 = obj.find(target);
 */
