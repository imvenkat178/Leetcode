class Solution {
    static final int MOD = 1000000007;
    public int rangeSum(int[] nums, int n, int left, int right) {
        
        int[] sums = new int[n];
        int[] res = new int[(n * (n+1))/2];
        sums[0] = nums[0];
        res[0] = nums[0];
        
        for(int i =1 ; i < nums.length ; i++)
        {
            sums[i] = sums[i-1] + nums[i];
            res[i] = res[i-1] + nums[i];
        }
        int k=sums.length;

        for(int i=0;i<sums.length-1;i++)
        {
            int sum = 0;
            for(int j=i ; j<sums.length-1;j++)
            {
                for(int l=j+1 ; l<j+2;l++)
                {
                    sum = sum + sums[l] - sums[j];
                    res[k] = sum;
                    k++;
                }
                
            }
        }
        Arrays.sort(res);
        return modularSum(res, left, right);
    }

    public static int modularSum(int[] array, int left, int right) {
        long sum = 0;
        for (int i = left - 1; i < right; i++) { 
            sum = (sum + array[i]) % MOD;
        }
        return (int) ((sum + MOD) % MOD);
    }
}
