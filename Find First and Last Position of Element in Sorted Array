class Solution {
    public int[] searchRange(int[] nums, int target) {
        int frstocc = lowerBinarySearch(nums,target);
        int lstocc = upperBinarySearch(nums,target);
        return new int[] {frstocc ,lstocc};
    }

    private int lowerBinarySearch(int[] nums , int target)
    {
        int low = 0;
        int high = nums.length-1;
        int index = -1;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid]==target)
            {
                index = mid;
                high = mid-1;
            }else if(nums[mid]>target){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return index;
    }

    private int upperBinarySearch(int[] nums , int target)
    {
        int low = 0;
        int high = nums.length-1;
        int index = -1;
        while(low<=high)
        {
            int mid = (low+high)/2;
            if(nums[mid]==target)
            {
                index = mid;
                low = mid+1;
            }else if(nums[mid]>target){
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return index;
    }
}
