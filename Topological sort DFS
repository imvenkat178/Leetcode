/*Complete the function below*/


class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        int[] visited = new int[V];
        Stack<Integer> st = new Stack<Integer>();
        
        for(int i=0 ; i<V;i++)
        {
            if(visited[i] == 0)
            {
                dfs(adj , st , visited ,i);
            }
        }
        int[] topo = new int[V];
        for(int i = 0; i<V;i++)
        {
            topo[i] = st.pop();
        }
        return topo;
    }
    
    static private void dfs(ArrayList<ArrayList<Integer>> adj , Stack<Integer> st , int[]visited ,int node)
    {
        visited[node] = 1;
        for(int i : adj.get(node))
        {
            if(visited[i] == 0)
            {
                dfs(adj, st, visited , i);
            }
            
        }
        st.push(node);
    }
}
