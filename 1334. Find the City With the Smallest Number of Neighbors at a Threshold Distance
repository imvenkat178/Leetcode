class Solution {
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        int dist[][] = new int[n][n];
        int city = 0;
        int minCount = Integer.MAX_VALUE;

        for(int i=0 ;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i == j)
                {
                    dist[i][j] = 0;
                }
                else{
                    dist[i][j] = Integer.MAX_VALUE;
                }
            }
        }

        for(int i=0;i<edges.length;i++)
        {
            dist[edges[i][0]][edges[i][1]] = edges[i][2];
            dist[edges[i][1]][edges[i][0]] = edges[i][2];
        }

        

        for(int i=0 ; i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                for(int k=0 ; k<n;k++)
                {
                    if((dist[j][i]!=Integer.MAX_VALUE && dist[i][k]!=Integer.MAX_VALUE) && dist[j][i] + dist[i][k] < dist[j][k])
                    {
                        dist[j][k] = dist[j][i] + dist[i][k];
                    }
                }
            }
        }

        for(int i=0 ;i<n;i++)
        {
            int count = 0;
            for(int j=0;j<n;j++)
            {
                if(dist[i][j] <= distanceThreshold)
                {
                    count +=1;
                }
            }
            
            if(count <= minCount)
            {
                city = i;
                minCount = count;
            }
        }
        return city;
    }
}
